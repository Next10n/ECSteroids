//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CurrentLaserRestoreTimeListenerComponent currentLaserRestoreTimeListener { get { return (CurrentLaserRestoreTimeListenerComponent)GetComponent(GameComponentsLookup.CurrentLaserRestoreTimeListener); } }
    public bool hasCurrentLaserRestoreTimeListener { get { return HasComponent(GameComponentsLookup.CurrentLaserRestoreTimeListener); } }

    public void AddCurrentLaserRestoreTimeListener(System.Collections.Generic.List<ICurrentLaserRestoreTimeListener> newValue) {
        var index = GameComponentsLookup.CurrentLaserRestoreTimeListener;
        var component = (CurrentLaserRestoreTimeListenerComponent)CreateComponent(index, typeof(CurrentLaserRestoreTimeListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCurrentLaserRestoreTimeListener(System.Collections.Generic.List<ICurrentLaserRestoreTimeListener> newValue) {
        var index = GameComponentsLookup.CurrentLaserRestoreTimeListener;
        var component = (CurrentLaserRestoreTimeListenerComponent)CreateComponent(index, typeof(CurrentLaserRestoreTimeListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCurrentLaserRestoreTimeListener() {
        RemoveComponent(GameComponentsLookup.CurrentLaserRestoreTimeListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCurrentLaserRestoreTimeListener;

    public static Entitas.IMatcher<GameEntity> CurrentLaserRestoreTimeListener {
        get {
            if (_matcherCurrentLaserRestoreTimeListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CurrentLaserRestoreTimeListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCurrentLaserRestoreTimeListener = matcher;
            }

            return _matcherCurrentLaserRestoreTimeListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddCurrentLaserRestoreTimeListener(ICurrentLaserRestoreTimeListener value) {
        var listeners = hasCurrentLaserRestoreTimeListener
            ? currentLaserRestoreTimeListener.value
            : new System.Collections.Generic.List<ICurrentLaserRestoreTimeListener>();
        listeners.Add(value);
        ReplaceCurrentLaserRestoreTimeListener(listeners);
    }

    public void RemoveCurrentLaserRestoreTimeListener(ICurrentLaserRestoreTimeListener value, bool removeComponentWhenEmpty = true) {
        var listeners = currentLaserRestoreTimeListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCurrentLaserRestoreTimeListener();
        } else {
            ReplaceCurrentLaserRestoreTimeListener(listeners);
        }
    }
}
