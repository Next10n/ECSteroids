//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Core.Game.Components.AccelerationSpeedComponent accelerationSpeed { get { return (Core.Game.Components.AccelerationSpeedComponent)GetComponent(GameComponentsLookup.AccelerationSpeed); } }
    public bool hasAccelerationSpeed { get { return HasComponent(GameComponentsLookup.AccelerationSpeed); } }

    public void AddAccelerationSpeed(float newValue) {
        var index = GameComponentsLookup.AccelerationSpeed;
        var component = (Core.Game.Components.AccelerationSpeedComponent)CreateComponent(index, typeof(Core.Game.Components.AccelerationSpeedComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAccelerationSpeed(float newValue) {
        var index = GameComponentsLookup.AccelerationSpeed;
        var component = (Core.Game.Components.AccelerationSpeedComponent)CreateComponent(index, typeof(Core.Game.Components.AccelerationSpeedComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAccelerationSpeed() {
        RemoveComponent(GameComponentsLookup.AccelerationSpeed);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAccelerationSpeed;

    public static Entitas.IMatcher<GameEntity> AccelerationSpeed {
        get {
            if (_matcherAccelerationSpeed == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AccelerationSpeed);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAccelerationSpeed = matcher;
            }

            return _matcherAccelerationSpeed;
        }
    }
}
