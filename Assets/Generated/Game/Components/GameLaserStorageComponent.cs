//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Core.Game.Components.LaserStorageComponent laserStorage { get { return (Core.Game.Components.LaserStorageComponent)GetComponent(GameComponentsLookup.LaserStorage); } }
    public bool hasLaserStorage { get { return HasComponent(GameComponentsLookup.LaserStorage); } }

    public void AddLaserStorage(int newValue) {
        var index = GameComponentsLookup.LaserStorage;
        var component = (Core.Game.Components.LaserStorageComponent)CreateComponent(index, typeof(Core.Game.Components.LaserStorageComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceLaserStorage(int newValue) {
        var index = GameComponentsLookup.LaserStorage;
        var component = (Core.Game.Components.LaserStorageComponent)CreateComponent(index, typeof(Core.Game.Components.LaserStorageComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveLaserStorage() {
        RemoveComponent(GameComponentsLookup.LaserStorage);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLaserStorage;

    public static Entitas.IMatcher<GameEntity> LaserStorage {
        get {
            if (_matcherLaserStorage == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LaserStorage);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLaserStorage = matcher;
            }

            return _matcherLaserStorage;
        }
    }
}
