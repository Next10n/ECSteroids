//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Core.Game.Components.DestroyAssetViewComponent destroyAssetView { get { return (Core.Game.Components.DestroyAssetViewComponent)GetComponent(GameComponentsLookup.DestroyAssetView); } }
    public bool hasDestroyAssetView { get { return HasComponent(GameComponentsLookup.DestroyAssetView); } }

    public void AddDestroyAssetView(string newValue) {
        var index = GameComponentsLookup.DestroyAssetView;
        var component = (Core.Game.Components.DestroyAssetViewComponent)CreateComponent(index, typeof(Core.Game.Components.DestroyAssetViewComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceDestroyAssetView(string newValue) {
        var index = GameComponentsLookup.DestroyAssetView;
        var component = (Core.Game.Components.DestroyAssetViewComponent)CreateComponent(index, typeof(Core.Game.Components.DestroyAssetViewComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDestroyAssetView() {
        RemoveComponent(GameComponentsLookup.DestroyAssetView);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDestroyAssetView;

    public static Entitas.IMatcher<GameEntity> DestroyAssetView {
        get {
            if (_matcherDestroyAssetView == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DestroyAssetView);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDestroyAssetView = matcher;
            }

            return _matcherDestroyAssetView;
        }
    }
}
