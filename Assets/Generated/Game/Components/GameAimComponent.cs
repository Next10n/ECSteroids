//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Components.AimComponent aim { get { return (Game.Components.AimComponent)GetComponent(GameComponentsLookup.Aim); } }
    public bool hasAim { get { return HasComponent(GameComponentsLookup.Aim); } }

    public void AddAim(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.Aim;
        var component = (Game.Components.AimComponent)CreateComponent(index, typeof(Game.Components.AimComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAim(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.Aim;
        var component = (Game.Components.AimComponent)CreateComponent(index, typeof(Game.Components.AimComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAim() {
        RemoveComponent(GameComponentsLookup.Aim);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAim;

    public static Entitas.IMatcher<GameEntity> Aim {
        get {
            if (_matcherAim == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Aim);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAim = matcher;
            }

            return _matcherAim;
        }
    }
}
