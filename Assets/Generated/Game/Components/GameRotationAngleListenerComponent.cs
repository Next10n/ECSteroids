//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RotationAngleListenerComponent rotationAngleListener { get { return (RotationAngleListenerComponent)GetComponent(GameComponentsLookup.RotationAngleListener); } }
    public bool hasRotationAngleListener { get { return HasComponent(GameComponentsLookup.RotationAngleListener); } }

    public void AddRotationAngleListener(System.Collections.Generic.List<IRotationAngleListener> newValue) {
        var index = GameComponentsLookup.RotationAngleListener;
        var component = (RotationAngleListenerComponent)CreateComponent(index, typeof(RotationAngleListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRotationAngleListener(System.Collections.Generic.List<IRotationAngleListener> newValue) {
        var index = GameComponentsLookup.RotationAngleListener;
        var component = (RotationAngleListenerComponent)CreateComponent(index, typeof(RotationAngleListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRotationAngleListener() {
        RemoveComponent(GameComponentsLookup.RotationAngleListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRotationAngleListener;

    public static Entitas.IMatcher<GameEntity> RotationAngleListener {
        get {
            if (_matcherRotationAngleListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RotationAngleListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRotationAngleListener = matcher;
            }

            return _matcherRotationAngleListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddRotationAngleListener(IRotationAngleListener value) {
        var listeners = hasRotationAngleListener
            ? rotationAngleListener.value
            : new System.Collections.Generic.List<IRotationAngleListener>();
        listeners.Add(value);
        ReplaceRotationAngleListener(listeners);
    }

    public void RemoveRotationAngleListener(IRotationAngleListener value, bool removeComponentWhenEmpty = true) {
        var listeners = rotationAngleListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveRotationAngleListener();
        } else {
            ReplaceRotationAngleListener(listeners);
        }
    }
}
