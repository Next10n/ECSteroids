//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity randomProviderEntity { get { return GetGroup(MetaMatcher.RandomProvider).GetSingleEntity(); } }
    public Services.Components.RandomProviderComponent randomProvider { get { return randomProviderEntity.randomProvider; } }
    public bool hasRandomProvider { get { return randomProviderEntity != null; } }

    public MetaEntity SetRandomProvider(Services.IRandomProvider newValue) {
        if (hasRandomProvider) {
            throw new Entitas.EntitasException("Could not set RandomProvider!\n" + this + " already has an entity with Services.Components.RandomProviderComponent!",
                "You should check if the context already has a randomProviderEntity before setting it or use context.ReplaceRandomProvider().");
        }
        var entity = CreateEntity();
        entity.AddRandomProvider(newValue);
        return entity;
    }

    public void ReplaceRandomProvider(Services.IRandomProvider newValue) {
        var entity = randomProviderEntity;
        if (entity == null) {
            entity = SetRandomProvider(newValue);
        } else {
            entity.ReplaceRandomProvider(newValue);
        }
    }

    public void RemoveRandomProvider() {
        randomProviderEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public Services.Components.RandomProviderComponent randomProvider { get { return (Services.Components.RandomProviderComponent)GetComponent(MetaComponentsLookup.RandomProvider); } }
    public bool hasRandomProvider { get { return HasComponent(MetaComponentsLookup.RandomProvider); } }

    public void AddRandomProvider(Services.IRandomProvider newValue) {
        var index = MetaComponentsLookup.RandomProvider;
        var component = (Services.Components.RandomProviderComponent)CreateComponent(index, typeof(Services.Components.RandomProviderComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRandomProvider(Services.IRandomProvider newValue) {
        var index = MetaComponentsLookup.RandomProvider;
        var component = (Services.Components.RandomProviderComponent)CreateComponent(index, typeof(Services.Components.RandomProviderComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRandomProvider() {
        RemoveComponent(MetaComponentsLookup.RandomProvider);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherRandomProvider;

    public static Entitas.IMatcher<MetaEntity> RandomProvider {
        get {
            if (_matcherRandomProvider == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.RandomProvider);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherRandomProvider = matcher;
            }

            return _matcherRandomProvider;
        }
    }
}
