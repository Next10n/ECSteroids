//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity windowServiceEntity { get { return GetGroup(MetaMatcher.WindowService).GetSingleEntity(); } }
    public Core.Meta.Components.WindowServiceComponent windowService { get { return windowServiceEntity.windowService; } }
    public bool hasWindowService { get { return windowServiceEntity != null; } }

    public MetaEntity SetWindowService(Infrastructure.Services.Windows.IWindowService newValue) {
        if (hasWindowService) {
            throw new Entitas.EntitasException("Could not set WindowService!\n" + this + " already has an entity with Core.Meta.Components.WindowServiceComponent!",
                "You should check if the context already has a windowServiceEntity before setting it or use context.ReplaceWindowService().");
        }
        var entity = CreateEntity();
        entity.AddWindowService(newValue);
        return entity;
    }

    public void ReplaceWindowService(Infrastructure.Services.Windows.IWindowService newValue) {
        var entity = windowServiceEntity;
        if (entity == null) {
            entity = SetWindowService(newValue);
        } else {
            entity.ReplaceWindowService(newValue);
        }
    }

    public void RemoveWindowService() {
        windowServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public Core.Meta.Components.WindowServiceComponent windowService { get { return (Core.Meta.Components.WindowServiceComponent)GetComponent(MetaComponentsLookup.WindowService); } }
    public bool hasWindowService { get { return HasComponent(MetaComponentsLookup.WindowService); } }

    public void AddWindowService(Infrastructure.Services.Windows.IWindowService newValue) {
        var index = MetaComponentsLookup.WindowService;
        var component = (Core.Meta.Components.WindowServiceComponent)CreateComponent(index, typeof(Core.Meta.Components.WindowServiceComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceWindowService(Infrastructure.Services.Windows.IWindowService newValue) {
        var index = MetaComponentsLookup.WindowService;
        var component = (Core.Meta.Components.WindowServiceComponent)CreateComponent(index, typeof(Core.Meta.Components.WindowServiceComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveWindowService() {
        RemoveComponent(MetaComponentsLookup.WindowService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherWindowService;

    public static Entitas.IMatcher<MetaEntity> WindowService {
        get {
            if (_matcherWindowService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.WindowService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherWindowService = matcher;
            }

            return _matcherWindowService;
        }
    }
}
